package didCommunicationUtils

// NewProfileCodeAttributes is created by a supervisor (admin) in a client app.
// - the "aud" (required): reverseDNS of some app(s) allowed to activate the new profile code (comma separated if more than one).
// - the "code_challenge" (required) field is the SHA-256 hash result of a random challenge generated by the client application, base64url encoded.
// - the "code_challenge_method" (required) field value is "S256".
// - the "subject" (REQUIRED) field refers in UHC to the target practitioner's DID when an admin is creating an install-code for a practitioner's profile
// - the "scope" (OPTIONAL) field value is "openid".
// - the "response_type" (required) field value contains "code".
//	NOTE: Set the expiration period of the authorization code to one minute or a suitable short period of time if not replay is possible. The validity period may act as a cache control indicator of when to clear the authorization code cache if one is used.
type NewProfileCodeAttributes struct {
	// ClientID will be set in the backend service before storing each individual profile code generation
	// Expiration will be set in the backend service before storing each individual profile code generation
	// The index in the collection will be the code_challenge (it is a unique hash)
	// The decoded Bearer data will be in Body.Meta.Bearer
	Audiences           string `json:"aud,omitempty" bson:"aud,omitempty"`                           // reverseDNS of some app(s) allowed to activate the new profile code (comma separated).
	CodeChallenge       string `json:"code_challenge,omitempty" bson:"code_challenge,omitempty"`     // It is a unique hash (hexadecimal) created from a unique code (UUID) with a length
	CodeChallengeMethod string `json:"code_challenge_method" bson:"code_challenge_method,omitempty"` // SHALL be "S256"
	ResponseType        string `json:"response_type,omitempty" bson:"response_type,omitempty"`       // SHALL be "code"
	Scope               string `json:"scope,omitempty" bson:"scope,omitempty"`                       // OPTIONAL
	Subject             string `json:"sub,omitempty" bson:"sub,omitempty"`                           // REQUIRED. This is the end-user (professional, patient, relatedPerson)
}
